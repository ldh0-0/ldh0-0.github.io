<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>寒假每日一题</title>
      <link href="/2021/12/27/%E5%AF%92%E5%81%87%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/"/>
      <url>/2021/12/27/%E5%AF%92%E5%81%87%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<h2 id="2058-笨拙的手指"><a href="#2058-笨拙的手指" class="headerlink" title="2058. 笨拙的手指"></a><a href="https://www.acwing.com/problem/content/2060/">2058. 笨拙的手指</a></h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">get</span><span class="params">(string s, <span class="keyword">int</span> a)</span><span class="comment">//将a进制转换为10进制</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line">    <span class="comment">//秦九韶算法</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">auto</span> c: s)</span><br><span class="line">    &#123;</span><br><span class="line">        res = res * a + c - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    string a, b;</span><br><span class="line">    cin &gt;&gt; a &gt;&gt; b;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">auto</span>&amp; c: a)<span class="comment">//枚举a的每一位</span></span><br><span class="line">    &#123;</span><br><span class="line">        c^=<span class="number">1</span>;<span class="comment">//异或1相当于将字符1变0 0变1</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">auto</span>&amp; d: b)<span class="comment">//枚举b的每一位</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">char</span> t = d;</span><br><span class="line">                <span class="keyword">if</span>(i + <span class="string">&#x27;0&#x27;</span> != t)</span><br><span class="line">                &#123;</span><br><span class="line">                    d = i + <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">                    <span class="keyword">if</span>(<span class="built_in">get</span>(a,<span class="number">2</span>) == <span class="built_in">get</span>(b,<span class="number">3</span>))</span><br><span class="line">                    &#123;</span><br><span class="line">                        cout &lt;&lt; <span class="built_in">get</span>(a,<span class="number">2</span>) &lt;&lt; endl;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                d = t;</span><br><span class="line">            &#125;  </span><br><span class="line">        &#125;</span><br><span class="line">        c^=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> wp </tag>
            
            <tag> 算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>c++笔记</title>
      <link href="/2021/12/24/c-%E7%AC%94%E8%AE%B0/"/>
      <url>/2021/12/24/c-%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h2 id="C-核心编程"><a href="#C-核心编程" class="headerlink" title="C++核心编程"></a>C++核心编程</h2><h3 id="内存分区模型"><a href="#内存分区模型" class="headerlink" title="内存分区模型"></a>内存分区模型</h3><p>c++程序在执行时，将内存大方向划分为4个区域</p><ul>    <li>代码区：存放程序二进制代码,即CPU执行的机器指令,并且是只读的</li>    <li>全局区：存放全局变量和静态变量以及常量</li>    <li>栈区：由编译器自动分配释放,存放函数的参数值,局部变量等</li>    <li>堆区：由程序员分配和释放,若程序员不释放,程序结束时由系统回收</li></ul><h4 id="程序运行前"><a href="#程序运行前" class="headerlink" title="程序运行前"></a>程序运行前</h4><p>在程序编译后，未执行程序前分为两个区域<br><strong>代码区：</strong></p><ul>    <li>代码区的内存是由系统控制的</li>    <li>代码区的存放 :程序中的函数编译后cpu指令</li>    <li>代码区的地址:函数的地址,程序的入口地址，程序的名字函数的名称也是一个指针，可以通过查询函数名称所处的内存地址，查询函数存放的区域</li></ul><strong>全局区：</strong><ul>    <li>全局变量和静态变量存放在此</li>    <li>全局区还包含了常量区，字符串常量和其他常量也存放在此</li>    <li>该区域的数据在程序结束后由操作系统释放</li>    </ul><h4 id="程序运行后"><a href="#程序运行后" class="headerlink" title="程序运行后"></a>程序运行后</h4><p><strong>栈区：</strong></p><ul>    <li>由编译器自动分配释放，存放函数的参数值，局部变量等</li>    <li>主意事项：不要返回局部变量的地址，栈区开辟的数据由编译器自动释放</li></ul><p><strong>堆区：</strong></p><ul>    <li>由程序员分配释放，若程序员不释放，程序结束时由操作系统回收</li>    <li>在c++中主要利用new在堆区开辟内存</li></ul><h4 id="new操作符"><a href="#new操作符" class="headerlink" title="new操作符"></a>new操作符</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span>* <span class="title">test01</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//利用new关键字可以将数据开辟到堆区</span></span><br><span class="line"><span class="comment">//指针本质也是局部变量，放在栈上，指针保存的数据是放在堆区</span></span><br><span class="line"><span class="keyword">int</span>* p = <span class="keyword">new</span> <span class="built_in"><span class="keyword">int</span></span>(<span class="number">10</span>);</span><br><span class="line"><span class="keyword">return</span> p;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test02</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//创建10个整型数据的数组，在堆区</span></span><br><span class="line"><span class="keyword">int</span>* arr = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">10</span>];</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">arr[i] = i + <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; arr[i] &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//释放堆区数组</span></span><br><span class="line"><span class="comment">//释放数组的时候要加[]才可以</span></span><br><span class="line"><span class="keyword">delete</span>[] arr;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span>* p = <span class="built_in">test01</span>();</span><br><span class="line">cout &lt;&lt; *p &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; *p &lt;&lt; endl;</span><br><span class="line"><span class="keyword">delete</span> p;</span><br><span class="line"><span class="comment">//cout &lt;&lt; *p &lt;&lt; endl; //内存已经被释放，再次访问就是非法操作，会报错</span></span><br><span class="line"><span class="built_in">test02</span>();</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h3><h4 id="引用的基本使用"><a href="#引用的基本使用" class="headerlink" title="引用的基本使用"></a>引用的基本使用</h4><ul>    <li>作用：给变量起别名</li>    <li>语法：数据类型 &别名 = 原名</li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> a = <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span>&amp; b = a;</span><br><span class="line">cout &lt;&lt; a &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; b &lt;&lt; endl;</span><br><span class="line">b = <span class="number">100</span>;</span><br><span class="line">cout &lt;&lt; a &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; b &lt;&lt; endl;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>注意:</strong></p><ol>    <li>引用必须初始化</li>    <li>引用初始化后不能更改引用</li></ol><h4 id="引用做函数参数"><a href="#引用做函数参数" class="headerlink" title="引用做函数参数"></a>引用做函数参数</h4><p>作用：函数传参时，可以利用引用的技术让形参修饰实参<br>优点：可以简化指针修改实参</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">swap</span><span class="params">(<span class="keyword">int</span>&amp; a, <span class="keyword">int</span>&amp; b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> temp = a;</span><br><span class="line">a = b;</span><br><span class="line">b = temp;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> a = <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> b = <span class="number">20</span>;</span><br><span class="line"><span class="built_in">swap</span>(a, b);</span><br><span class="line">cout &lt;&lt; a &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; b &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="引用做函数返回值"><a href="#引用做函数返回值" class="headerlink" title="引用做函数返回值"></a>引用做函数返回值</h4><p>作用：引用是可以作为函数的返回值存在的<br>注意：不要返回局部变量引用<br>用法：函数调用作为左值</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//返回局部变量引用</span></span><br><span class="line"><span class="function"><span class="keyword">int</span>&amp; <span class="title">test1</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> a = <span class="number">10</span>;</span><br><span class="line"><span class="keyword">return</span> a;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span>&amp; <span class="title">test2</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">int</span> a = <span class="number">10</span>;</span><br><span class="line"><span class="keyword">return</span> a;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//不能返回局部变量引用</span></span><br><span class="line"><span class="keyword">int</span> &amp;b = <span class="built_in">test1</span>();</span><br><span class="line">cout &lt;&lt; b &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; b &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span>&amp; c = <span class="built_in">test2</span>();</span><br><span class="line">cout &lt;&lt; c &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; c &lt;&lt; endl;</span><br><span class="line"><span class="comment">//如果函数做左值，必须返回引用</span></span><br><span class="line"><span class="built_in">test2</span>() = <span class="number">1000</span>;</span><br><span class="line">cout &lt;&lt; c &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; c &lt;&lt; endl;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>本质：<strong>引用的本质是在c++内部实现是一个指针常量</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//int* const ref = &amp;a;</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">func</span><span class="params">(<span class="keyword">int</span>&amp; ref)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">ref = <span class="number">100</span>; <span class="comment">//*ref = 100;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> a = <span class="number">10</span>;</span><br><span class="line"><span class="comment">//自动转换为 int* const ref = &amp;a;指针常量是指针指向不可改，也说明为什么引用不可更改</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span>&amp; ref = a;</span><br><span class="line">ref = <span class="number">20</span>; <span class="comment">//内部发现ref是引用，自动帮我们转换为 *ref = 20;</span></span><br><span class="line">cout &lt;&lt; a &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; ref &lt;&lt; endl;</span><br><span class="line"><span class="built_in">fun</span>(a);</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>补充：int* const a<br>这里const修饰的是a,a代表的是一个指针地址，因此不能赋给a其他的地址值,但可以修改a指向的值。</p><h3 id="函数提高"><a href="#函数提高" class="headerlink" title="函数提高"></a>函数提高</h3><h4 id="函数默认参数"><a href="#函数默认参数" class="headerlink" title="函数默认参数"></a>函数默认参数</h4>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> c++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>sql笔记</title>
      <link href="/2021/12/19/sql%20sever%E7%AC%94%E8%AE%B0/"/>
      <url>/2021/12/19/sql%20sever%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h2 id="SQL-数据定义"><a href="#SQL-数据定义" class="headerlink" title="SQL 数据定义"></a>SQL 数据定义</h2><h3 id="SQL概述"><a href="#SQL概述" class="headerlink" title="SQL概述"></a>SQL概述</h3><!-- wp:quote {"className":"is-style-default"} --><blockquote><p>1970年，美国IBM研究中心的E.F.Codd连续发表多篇论文，提出关系模型。</p><p>1972年，最初的SQL原型SQUARE出现，作为IBM公司San Jose研究室的SYSTEM R的一部分。</p><p>1974年，Boyce和Chamberlin把SQUARE修改为SEQUEL语言。后来SEQUEL简称为SQL (Structured QueryLanguage )，即“结构化查询语言”。</p><p>1986年10月， ANSI公布最早的SQL标准，并将其作为关系数据库管理系统的标准语言。</p><p>1987年6月，ISO采纳SQL为国际标准</p></blockquote><!-- /wp:quote --><!-- wp:heading {"level":3} --><h3 id="SQL的特点"><a href="#SQL的特点" class="headerlink" title="SQL的特点"></a>SQL的特点</h3><!-- /wp:heading --><!-- wp:list {"fontSize":"medium"} --><ul><li>功能一体化</li><li>高度非过程化</li><li>面向集合的操作方式</li><li>两种使用方式：命令行和嵌入到其他宿主语言（如Java等）方式</li><li>简洁易学</li><li><strong>SQL Server</strong>不区分大小写</li></ul><!-- /wp:list --><!-- wp:heading {"level":3} --><h3 id="数据定义语言"><a href="#数据定义语言" class="headerlink" title="数据定义语言"></a>数据定义语言</h3><!-- /wp:heading --><!-- wp:heading {"level":3} --><h3 id="创建数据库"><a href="#创建数据库" class="headerlink" title="创建数据库"></a>创建数据库</h3><!-- /wp:heading --><!-- wp:list {"fontSize":"medium"} --><ul class="has-medium-font-size"><li>ON关键字表示数据库是根据后面的参数来创建的；</li><li>LOG ON 子句用于指定该数据库的事务日志文件；</li><li>NAME用于指定数据库文件的逻辑文件名；</li><li>FILNAME用于指定数据库文件的存放位置及在磁盘上的文件名；</li><li>SIZE用于指定数据库文件的初始大小，可以加上MB或者KB, 默认为MB; </li><li>MAXSIZE用于指定数据库文件的最大大小，可以加上MB或者KB,默认为MB。省略此项表示最大大小无限制； </li><li>FILEGROWTH用于指定数据库文件的增加量，可以加上MB或KB或%, 默认为MB。省略此项表示不自动增长。</li></ul><!-- /wp:list --><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> database 数据库名称      </span><br><span class="line"><span class="keyword">on</span></span><br><span class="line">(</span><br><span class="line">    name <span class="operator">=</span> 数据文件名,</span><br><span class="line">    filename <span class="operator">=</span> <span class="string">&#x27;路径+数据文件名&#x27;</span>,</span><br><span class="line">    size <span class="operator">=</span> 数据文件初始大小,</span><br><span class="line">    maxsize <span class="operator">=</span> 数据文件最大容量,</span><br><span class="line">    filegrowth <span class="operator">=</span> 数据文件自动增长容量</span><br><span class="line">)</span><br><span class="line">log <span class="keyword">on</span></span><br><span class="line">(</span><br><span class="line">    name <span class="operator">=</span> 日志文件逻辑名称,</span><br><span class="line">    filename <span class="operator">=</span> <span class="string">&#x27;路径+日志文件名&#x27;</span>,</span><br><span class="line">    size <span class="operator">=</span> 日志文件初始大小,</span><br><span class="line">    maxsize <span class="operator">=</span> 日志文件最大容量,</span><br><span class="line">    filegrowth <span class="operator">=</span> 日志文件自动增长容量</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">例如：</span><br><span class="line"><span class="keyword">create</span> database Study</span><br><span class="line"><span class="keyword">on</span></span><br><span class="line">(</span><br><span class="line">name <span class="operator">=</span> Study,</span><br><span class="line">filename <span class="operator">=</span> <span class="string">&#x27;D:\SQL Server\Study.mdf&#x27;</span>,</span><br><span class="line">size <span class="operator">=</span> <span class="number">5</span>,</span><br><span class="line">maxsize <span class="operator">=</span> <span class="number">50</span>,</span><br><span class="line">filegrowth <span class="operator">=</span> <span class="number">5</span></span><br><span class="line">)</span><br><span class="line">log <span class="keyword">on</span></span><br><span class="line">(</span><br><span class="line">name <span class="operator">=</span> Study_log,</span><br><span class="line">filename <span class="operator">=</span> <span class="string">&#x27;D:\SQL Server\Study.ldf&#x27;</span>,</span><br><span class="line">size <span class="operator">=</span> <span class="number">5</span>,</span><br><span class="line">maxsize <span class="operator">=</span> <span class="number">50</span>,</span><br><span class="line">filegrowth <span class="operator">=</span> <span class="number">5</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure><!-- wp:paragraph {"fontSize":"medium"} --><p class="has-medium-font-size">创建一个数据库会至少产生两个文件：数据文件和事务日志文件其中，数据文件又分为主数据文件，用来存储数据库的启动信息和部分或全部数据（扩展名为.<code>mdf</code>）和次数据文件，用来存储主数据文件未存储的其他数据（扩展名为.<code>ndf</code>）。事务日志文件，保存用于恢复数据库的日志信息（扩展名为.<code>ldf</code>）。</p><!-- /wp:paragraph --><p><img src="https://cdn.jsdelivr.net/gh/ldh0-0/picgodemo/img/20211219125607.png"></p><!-- wp:paragraph {"fontSize":"medium"} --><p class="has-medium-font-size">初学者可以简单的用  create database 数据库名称  来创建，系统会按照默认属性来创建数据库。</p><!-- /wp:paragraph --><!-- wp:heading {"level":3} --><h3 id="删除数据库"><a href="#删除数据库" class="headerlink" title="删除数据库"></a>删除数据库</h3><!-- /wp:heading --><!-- wp:list {"fontSize":"medium"} --><ul class="has-medium-font-size"><li>语法：DROP DATABASE 数据库名。</li><li>被删除的数据库不能是当前正在使用的数据库。</li><li>使用数据库删除语句可以一次删除多个数据库。</li></ul><!-- /wp:list --><p><img src="https://cdn.jsdelivr.net/gh/ldh0-0/picgodemo/img/20211219125746.png"></p><!-- wp:heading {"level":3} --><h3 id="SQL-中的数据类型"><a href="#SQL-中的数据类型" class="headerlink" title="SQL 中的数据类型"></a>SQL 中的数据类型</h3><!-- /wp:heading --><!-- wp:table {"className":"is-style-regular"} --><figure class="wp-block-table is-style-regular"><table><tbody><tr><td class="has-text-align-center" data-align="center">SQL Server</td><td class="has-text-align-center" data-align="center">SQL99</td><td class="has-text-align-center" data-align="center">说明</td></tr><tr><td class="has-text-align-center" data-align="center">Bigint</td><td class="has-text-align-center" data-align="center"></td><td class="has-text-align-center" data-align="center">8字节，存储从–2 ^63(–9223372036854775808)<br>到263-1(9223372036854775807) 范围的整数</td></tr><tr><td class="has-text-align-center" data-align="center">Int</td><td class="has-text-align-center" data-align="center">Integer</td><td class="has-text-align-center" data-align="center">4字节，存储从 –2^31(–2,147,483,648 ) 到2^31-1<br>( 2,147,483,647 ) 范围的整数</td></tr><tr><td class="has-text-align-center" data-align="center">Smallint</td><td class="has-text-align-center" data-align="center">Smallint</td><td class="has-text-align-center" data-align="center">2字节，存储从–2^15(–32,768 )<br> 到2^15-1 (32,767 ) 范围的整数</td></tr><tr><td class="has-text-align-center" data-align="center">Tinyint</td><td class="has-text-align-center" data-align="center"></td><td class="has-text-align-center" data-align="center">存储从 0 到 255 之间的整数</td></tr><tr><td class="has-text-align-center" data-align="center">Bit</td><td class="has-text-align-center" data-align="center">Bit</td><td class="has-text-align-center" data-align="center">存储1或0</td></tr><tr><td class="has-text-align-center" data-align="center">decimal(p,q)或<br>numerice(p,q)</td><td class="has-text-align-center" data-align="center">decimal</td><td class="has-text-align-center" data-align="center">定点精度和小数位数。使用最大精度时，<br>有效值从 –10^38 +1 到10^38 -1。<br>其中，p为精度，指定小数点左边和右<br>边可以存储的十进或制数字的最大个数。q为小数位数，<br>指定小数点右边可以存储的十进<br>制数字的最大个数，0 <= q <= p。q的默认值为0</td></tr><tr><td class="has-text-align-center" data-align="center">float</td><td class="has-text-align-center" data-align="center">float</td><td class="has-text-align-center" data-align="center">8字节，存储从 –1.79E +<br>308 到 1.79E + 308 范围<br>的浮点型数</td></tr><tr><td class="has-text-align-center" data-align="center">real</td><td class="has-text-align-center" data-align="center"></td><td class="has-text-align-center" data-align="center">4字节，存储从 –3.40E +<br>38 到 3.40E + 38 范围的<br>浮点型数</td></tr><tr><td class="has-text-align-center" data-align="center">char(n)</td><td class="has-text-align-center" data-align="center">character</td><td class="has-text-align-center" data-align="center">固定长度的字符串类型，<br>n表示字符串的最大长度，<br>取值范围为1～8000</td></tr><tr><td class="has-text-align-center" data-align="center">varchar(n)</td><td class="has-text-align-center" data-align="center"><br>character<br>varying</td><td class="has-text-align-center" data-align="center">可变长度的字符串类型，<br> n表示字符串的最大长度，<br>取值范围为1～8000</td></tr><tr><td class="has-text-align-center" data-align="center">text</td><td class="has-text-align-center" data-align="center"></td><td class="has-text-align-center" data-align="center">可存储2^31-1(2,147,483,647)<br>个字符的大文本</td></tr><tr><td class="has-text-align-center" data-align="center">nchar(n)</td><td class="has-text-align-center" data-align="center">national<br>characte</td><td class="has-text-align-center" data-align="center">固定长度的 Unicode 数据，<br>表示字符串的最大长度，取值<br>范围为1～4000</td></tr><tr><td class="has-text-align-center" data-align="center">nvarchar(n)</td><td class="has-text-align-center" data-align="center">national<br>character<br>varying</td><td class="has-text-align-center" data-align="center">可变长度的 Unicode 数据，n<br> 表示字符串的最大长度，取值<br> 范围为1～4000</td></tr><tr><td class="has-text-align-center" data-align="center">ntext</td><td class="has-text-align-center" data-align="center"></td><td class="has-text-align-center" data-align="center">最多可存储2^30-1(1,073,741,823) 个字符的统<br>一字符编码文本</td></tr><tr><td class="has-text-align-center" data-align="center">binary(n)</td><td class="has-text-align-center" data-align="center">binary</td><td class="has-text-align-center" data-align="center">固定长度的二进制字符数据，n<br>表示最大长度，取值范围为1~8000</td></tr><tr><td class="has-text-align-center" data-align="center">varbinary(n)</td><td class="has-text-align-center" data-align="center">binary<br>varying</td><td class="has-text-align-center" data-align="center">可变长度的二进制字符数据，n<br>的取值范围为1～8000</td></tr><tr><td class="has-text-align-center" data-align="center">image</td><td class="has-text-align-center" data-align="center"></td><td class="has-text-align-center" data-align="center">大容量的、可变长度的二进制<br>字符数据，可以存储多种格式<br>的文件，最大约为2GB</td></tr><tr><td class="has-text-align-center" data-align="center">money</td><td class="has-text-align-center" data-align="center">无类型</td><td class="has-text-align-center" data-align="center">8字节，存储的货币数据值介于–26^<br>3 (–922,337,203,685,477.5808)<br>与 2^63-1 (+922,337,203,685,477.<br>5807) 之间，精确到货币单位的千<br>分之十。最多可以包含19位数字</td></tr><tr><td class="has-text-align-center" data-align="center">Smallmoney</td><td class="has-text-align-center" data-align="center">无类型</td><td class="has-text-align-center" data-align="center">4字节，存储的货币数据值介于<br>–214,748.3648 与 +214,748.3647<br>之间，精确到货币单位的千分之十</td></tr></tbody></table></figure><!-- /wp:table --><!-- wp:paragraph {"fontSize":"medium"} --><p class="has-medium-font-size">SQL Server的日期时间数据类型是合起来存储的，但SQL99是将其分开的日期是Date类型时间是Time类型。</p><!-- /wp:paragraph --><!-- wp:heading {"level":3} --><h3 id="数据完整性约束"><a href="#数据完整性约束" class="headerlink" title="数据完整性约束"></a>数据完整性约束</h3><!-- /wp:heading --><!-- wp:list {"fontSize":"medium"} --><ul class="has-medium-font-size"><li>主码约束：PRIMARY KEY      primary主要的</li><li>非空约束：NOT NULL</li><li>检查约束：CHECK（条件表达式）</li><li>唯一约束：UNIQUE</li><li>默认值约束：DEFAULT 默认值</li><li>外码约束：FOREIGN KEY(外码列) REFERENCES 表名（主码列）</li></ul><!-- /wp:list --><!-- wp:paragraph {"fontSize":"medium"} --><p class="has-medium-font-size"><span class="has-inline-color has-vivid-red-color">请注意，每个表可以有多个 UNIQUE 约束，但是每个表只能有一个 PRIMARY KEY 约束。</span></p><!-- /wp:paragraph --><!-- wp:heading {"level":3} --><h3 id="外码约束"><a href="#外码约束" class="headerlink" title="外码约束"></a>外码约束</h3><!-- /wp:heading --><!-- wp:paragraph {"fontSize":"medium"} --><p class="has-medium-font-size">用以建立列之间的参照关系（列可以来自不同的表）。使一个列的取值受另一个列的约束</p><!-- /wp:paragraph --><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> Book(</span><br><span class="line">book_ID <span class="type">CHAR</span>(<span class="number">10</span>)<span class="keyword">PRIMARY</span> KEY,</span><br><span class="line">name <span class="type">VARCHAR</span>(<span class="number">30</span>)<span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">author <span class="type">VARCHAR</span>(<span class="number">10</span>),</span><br><span class="line">publish <span class="type">VARCHAR</span>(<span class="number">20</span>),</span><br><span class="line">price <span class="type">DECIMAL</span>(<span class="number">6</span>,<span class="number">2</span>)<span class="keyword">CHECK</span>(price<span class="operator">&gt;</span><span class="number">0</span>),</span><br><span class="line">Classify <span class="type">varchar</span>(<span class="number">20</span>)</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> Reader(</span><br><span class="line">Reader_ID <span class="type">CHAR</span>(<span class="number">10</span>) <span class="keyword">PRIMARY</span> KEY,</span><br><span class="line">name <span class="type">VARCHAR</span>(<span class="number">8</span>),</span><br><span class="line">sex <span class="type">CHAR</span>(<span class="number">2</span>),</span><br><span class="line">birthdate DATETIME</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> Borrow(</span><br><span class="line">book_ID <span class="type">CHAR</span>(<span class="number">10</span>) <span class="keyword">REFERENCES</span> Book(book_ID),</span><br><span class="line">Reader_ID <span class="type">CHAR</span>(<span class="number">10</span>),</span><br><span class="line">Borrowdate DATETIME,</span><br><span class="line">ReturnDate DATETIME,</span><br><span class="line"><span class="keyword">PRIMARY</span> KEY(book_ID,Reader_ID),<span class="comment">--这里是用一个约束来同时约束两个列</span></span><br><span class="line"><span class="keyword">FOREIGN</span> KEY(Reader_ID) <span class="keyword">REFERENCES</span> Reader(Reader_ID)</span><br><span class="line">)</span><br></pre></td></tr></table></figure><!-- wp:heading {"level":3} --><h3 id="删除表"><a href="#删除表" class="headerlink" title="删除表"></a>删除表</h3><!-- /wp:heading --><!-- wp:list {"fontSize":"medium"} --><ul class="has-medium-font-size"><li>语法：DROP TABLE 表名</li><li>注意：有外码参照的表只能在外码所在表删除后才可以被删除。</li></ul><!-- /wp:list --><!-- wp:heading {"level":3} --><h3 id="修改表的列"><a href="#修改表的列" class="headerlink" title="修改表的列"></a>修改表的列</h3><!-- /wp:heading --><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> 表名</span><br><span class="line"><span class="comment">--修改列定义</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">COLUMN</span> 列名 新数据类型</span><br><span class="line"><span class="comment">--添加新列</span></span><br><span class="line"><span class="keyword">ADD</span> 列名 数据类型 约束</span><br><span class="line"><span class="comment">--删除列</span></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">COLUMN</span> 列名</span><br></pre></td></tr></table></figure><!-- wp:heading {"level":3} --><h3 id="修改表的约束"><a href="#修改表的约束" class="headerlink" title="修改表的约束"></a>修改表的约束</h3><!-- /wp:heading --><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> 表名</span><br><span class="line"><span class="comment">--给表添加新约束</span></span><br><span class="line"><span class="keyword">ADD</span> <span class="keyword">CONSTRAINT</span> 约束名 约束</span><br><span class="line"><span class="comment">--删除表中的约束</span></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">CONSTRAINT</span> 约束名</span><br></pre></td></tr></table></figure><!-- wp:heading --><h2 id="数据查询"><a href="#数据查询" class="headerlink" title="数据查询"></a>数据查询</h2><!-- /wp:heading --><!-- wp:heading {"level":3} --><h3 id="简单查询"><a href="#简单查询" class="headerlink" title="简单查询"></a>简单查询</h3><!-- /wp:heading --><!-- wp:list {"fontSize":"medium"} --><ul class="has-medium-font-size"><li>SELECT 查询哪些列</li><li>FROM 来自于哪些表</li><li>WHERE 筛选的条件</li><li>GROUP BY 根据那些列分组</li><li>HAVING 分组后的筛选条件</li><li>ORDER BY 根据那些列排序</li></ul><!-- /wp:list --><!-- wp:heading {"level":3} --><h3 id="聚集函数"><a href="#聚集函数" class="headerlink" title="聚集函数"></a>聚集函数</h3><!-- /wp:heading --><!-- wp:list {"fontSize":"medium"} --><ul class="has-medium-font-size"><li>COUNT(*) 统计表中元组/记录个数</li><li>COUNT (DISTINCT 列名) 统计本列（非空的）列值个数</li><li>SUM(列名) 计算列值总和（必须是数值型列）</li><li>AVG(列名) 计算列值平均值（必须是数值型列）</li><li>MAX(列名) 求列最大值</li><li>MIN(列名）求列最小值</li></ul><!-- /wp:list --><!-- wp:table --><figure class="wp-block-table"><table><tbody><tr><td><strong>查询条件</strong></td><td><strong>谓&nbsp;&nbsp;&nbsp;&nbsp; 词</strong></td></tr><tr><td>比较（比较运算符）</td><td>=, >, >=, <, <=, <>（或!=） NOT+上述比较运算符</td></tr><tr><td>确定范围</td><td>BETWEEN&nbsp; AND, NOT&nbsp; BETWEEN AND</td></tr><tr><td>确定集合</td><td>IN, NOT&nbsp; IN</td></tr><tr><td>字符匹配</td><td>LIKE, NOT&nbsp; LIKE</td></tr><tr><td>空值</td><td>IS NULL, IS NOT NULL</td></tr><tr><td>多重条件（逻辑谓词</td><td>AND, OR</td></tr></tbody></table></figure><!-- /wp:table --><!-- wp:heading {"level":3} --><h3 id="格式应用"><a href="#格式应用" class="headerlink" title="格式应用"></a>格式应用</h3><!-- /wp:heading --><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> book <span class="comment">--通配符*匹配表中所有的列</span></span><br><span class="line"><span class="keyword">select</span> book_ID, name, author, classify <span class="keyword">from</span> book <span class="keyword">where</span> classify <span class="operator">=</span> <span class="string">&#x27;计算机类&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> sex <span class="keyword">from</span> reader</span><br><span class="line"><span class="keyword">select</span> <span class="keyword">all</span> sex <span class="keyword">from</span> reader</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">distinct</span> sex <span class="keyword">from</span> reader <span class="comment">--去除重复元素</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> book_ID, name, author, price<span class="operator">*</span><span class="number">0.9</span> <span class="keyword">from</span> book</span><br><span class="line"><span class="keyword">select</span> book_ID, name, author, price<span class="operator">*</span><span class="number">0.9</span> <span class="keyword">as</span> newprice <span class="keyword">from</span> book</span><br><span class="line"><span class="keyword">select</span> book_ID, name, author, price<span class="operator">*</span><span class="number">0.9</span>  newprice <span class="keyword">from</span> book</span><br><span class="line"></span><br><span class="line"><span class="comment">--查询图书价格在30到50之间的图书</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> book <span class="keyword">where</span> price <span class="keyword">between</span> <span class="number">30</span> <span class="keyword">and</span> <span class="number">50</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> book <span class="keyword">where</span> price <span class="operator">&gt;=</span> <span class="number">30</span> <span class="keyword">and</span> price <span class="operator">&lt;=</span> <span class="number">50</span></span><br><span class="line"><span class="comment">--查询“清华大学出版社,机械工业出版社,高等教育出版社”出版图书</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> Book</span><br><span class="line"><span class="keyword">where</span> publish <span class="keyword">in</span>(<span class="string">&#x27;清华大学出版社&#x27;</span>,<span class="string">&#x27;机械工业出版社&#x27;</span>,<span class="string">&#x27;高等教育出版社&#x27;</span>)</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> Book</span><br><span class="line"><span class="keyword">where</span> publish <span class="operator">=</span> <span class="string">&#x27;清华大学出版社&#x27;</span> <span class="keyword">or</span> publish <span class="operator">=</span> <span class="string">&#x27;机械工业出版社&#x27;</span> <span class="keyword">or</span> </span><br><span class="line">publish <span class="operator">=</span> <span class="string">&#x27;高等教育出版社&#x27;</span></span><br><span class="line"><span class="comment">--查询名字是两个字的姓“王”的读者的信息</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> reader <span class="keyword">where</span> name <span class="keyword">like</span> <span class="string">&#x27;王%&#x27;</span> <span class="comment">--%匹配0个或多个</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> reader <span class="keyword">where</span> name <span class="keyword">like</span> <span class="string">&#x27;王_&#x27;</span> <span class="comment">--_匹配一个</span></span><br><span class="line"><span class="comment">--查询名字中带有“晓”字的人的信息</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> reader <span class="keyword">where</span> name <span class="keyword">like</span> <span class="string">&#x27;%晓%&#x27;</span></span><br><span class="line"><span class="comment">--查询所以不姓张的读者信息</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> reader <span class="keyword">where</span> name <span class="keyword">not</span> <span class="keyword">like</span> <span class="string">&#x27;张%&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> reader <span class="keyword">where</span> sex <span class="keyword">is</span> <span class="keyword">null</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> reader <span class="keyword">where</span> sex <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">null</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--查找出生日期中1977年出生的</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> reader <span class="keyword">where</span> <span class="keyword">year</span>(birthdate) <span class="operator">=</span> <span class="number">1977</span> </span><br><span class="line"><span class="comment">--按照出生日期升序排</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> reader <span class="keyword">order</span> <span class="keyword">by</span> birthdate <span class="keyword">asc</span> <span class="comment">--默认不填是asc升序</span></span><br><span class="line"> <span class="comment">--按照出生日期降序排</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> reader <span class="keyword">order</span> <span class="keyword">by</span> birthdate <span class="keyword">desc</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">count</span>(<span class="operator">*</span>) 总行数 <span class="keyword">from</span> book <span class="comment">--统计book表中行数</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">count</span>(name) <span class="keyword">from</span> book  <span class="comment">--统计book表中name列中不为空的行数</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">count</span>(<span class="keyword">distinct</span> sex) <span class="keyword">from</span> reader</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">AVG</span>(price) <span class="keyword">as</span> 平均价格 <span class="keyword">from</span> book</span><br><span class="line"><span class="keyword">select</span> <span class="built_in">max</span>(price) <span class="keyword">as</span> 最高价格 <span class="keyword">from</span> book</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> publish, <span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">from</span> book <span class="keyword">group</span> <span class="keyword">by</span> publish</span><br><span class="line"><span class="keyword">select</span> publish, <span class="built_in">count</span>(<span class="operator">*</span>), <span class="built_in">avg</span>(price) <span class="keyword">from</span> book <span class="keyword">group</span> <span class="keyword">by</span> publish <span class="keyword">having</span> <span class="built_in">avg</span>(price)<span class="operator">&gt;=</span><span class="number">23</span></span><br><span class="line"><span class="keyword">select</span> name <span class="keyword">from</span> book <span class="keyword">where</span> price<span class="operator">=</span>(<span class="keyword">select</span> <span class="built_in">max</span>(price) <span class="keyword">from</span> book) <span class="comment">--找到最贵的书的名字</span></span><br></pre></td></tr></table></figure><!-- wp:heading --><h2 id="多表查询"><a href="#多表查询" class="headerlink" title="多表查询"></a>多表查询</h2><!-- /wp:heading --><!-- wp:heading {"level":3} --><h3 id="嵌套子查询"><a href="#嵌套子查询" class="headerlink" title="嵌套子查询"></a>嵌套子查询</h3><!-- /wp:heading --><!-- wp:list {"fontSize":"medium"} --><ul class="has-medium-font-size"><li>在SQL语言中，一个SELECT-FROM语句称为一个查询块。</li><li>如果一个SELECT语句嵌套在另一个SLELECT、INSERT、UPDATE或DELETE语句中，则称之为子查询或内层查询；而包含子查询的语句则称为主查询或外层查询。</li><li>执行顺序：先内层后外层；先子查询后主查询</li></ul><!-- /wp:list --><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--查询售价最高的图书的名称</span></span><br><span class="line"><span class="keyword">SELECT</span> name <span class="keyword">From</span> book <span class="keyword">WHERE</span></span><br><span class="line">price<span class="operator">=</span>(<span class="keyword">SELECT</span> <span class="built_in">MAX</span>(price) <span class="keyword">from</span> book)</span><br></pre></td></tr></table></figure><!-- wp:list --><ul><li>各种子查询</li></ul><!-- /wp:list --><!-- wp:table --><figure class="wp-block-table"><table><tbody><tr><td></td><td><strong>子查询返回结果只有一个值</strong></td><td><strong>子查询返回多个值</strong></td></tr><tr><td><strong>等值比较</strong></td><td><strong>= </strong><strong>、</strong><strong><></strong><strong>号判断</strong> <strong>可以用</strong><strong>in</strong><strong>代替</strong></td><td><strong>&nbsp;</strong><strong>采用</strong><strong> </strong><strong>in </strong><strong>&nbsp;</strong><strong>或</strong><strong>not&nbsp; in</strong><strong>进行判断</strong></td></tr><tr><td><strong>不等比较</strong></td><td><strong>>, <, </strong><strong>>=, <=</strong></td><td><strong>>, <, </strong><strong>>=, <=</strong> <strong>All</strong> <strong>some</strong></td></tr></tbody></table></figure><!-- /wp:table --><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--查询与“C语言”在同一出版社的图书信息</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> Book <span class="keyword">WHERE</span> publish <span class="keyword">IN</span> (<span class="keyword">SELECT</span> publish <span class="keyword">FROM</span> Book <span class="keyword">WHERE</span> name<span class="operator">=</span>’C语言’)</span><br><span class="line"><span class="comment">--查询除最低价格外的所有图书</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> Book <span class="keyword">WHERE</span> price<span class="operator">&gt;</span><span class="keyword">SOME</span>(<span class="keyword">SELECT</span> price <span class="keyword">FROM</span> Book)</span><br><span class="line"><span class="comment">--查询价格最低的图书信息</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> Book <span class="keyword">WHERE</span> <span class="keyword">NOT</span>( price<span class="operator">&gt;</span><span class="keyword">SOME</span>(<span class="keyword">SELECT</span> price <span class="keyword">FROM</span> Book))</span><br><span class="line"><span class="comment">--查询书价最高的图书的信息</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> Book <span class="keyword">WHERE</span> price <span class="operator">&gt;=</span><span class="keyword">ALL</span>(<span class="keyword">SELECT</span> price <span class="keyword">FROM</span> Book)</span><br></pre></td></tr></table></figure><!-- wp:heading {"level":3} --><h3 id="多表连接查询"><a href="#多表连接查询" class="headerlink" title="多表连接查询"></a>多表连接查询</h3><!-- /wp:heading --><!-- wp:heading {"level":3,"fontSize":"medium"} --><h3 id="表连接的语法格式"><a href="#表连接的语法格式" class="headerlink" title="表连接的语法格式"></a>表连接的语法格式</h3><!-- /wp:heading --><!-- wp:list {"fontSize":"medium"} --><ul class="has-medium-font-size"><li><span class="has-inline-color has-vivid-red-color">FROM 表1 [inner|outer] JOIN 表2 ON <连接条件></span></li><li>其中表1，表2是需要连接的两张表， JOIN 表示连接，inner表示内连接，outer表示外连接，缺省情况就是内连接。ON后面接<连接条件>。</li></ul><!-- /wp:list --><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--查询2005年1月20日借书的读者姓名和所借图书的编号</span></span><br><span class="line"><span class="keyword">SELECT</span>  Name, book_ID </span><br><span class="line"><span class="keyword">FROM</span> Reader <span class="keyword">JOIN</span> Borrow <span class="keyword">ON</span> Reader.reader_ID <span class="operator">=</span>Borrow.reader_ID</span><br><span class="line"><span class="keyword">WHERE</span> borrowdate<span class="operator">=</span> <span class="string">&#x27;2005-1-20&#x27;</span></span><br><span class="line"><span class="comment">--查询2005年6月7日借阅图书的读者姓名和所借图书名称</span></span><br><span class="line"><span class="keyword">SELECT</span> Reader.name, Book.name <span class="keyword">FROM</span> Book <span class="keyword">JOIN</span> Borrow <span class="keyword">ON</span> Book.book_ID<span class="operator">=</span>Borrow.Book_ID <span class="keyword">JOIN</span> Reader <span class="keyword">ON</span> Reader.reader_ID<span class="operator">=</span>Borrow.reader_ID <span class="keyword">WHERE</span> borrowdate<span class="operator">=</span><span class="string">&#x27;2005-6-7&#x27;</span></span><br></pre></td></tr></table></figure><!-- wp:list {"fontSize":"medium"} --><ul class="has-medium-font-size"><li>内连接的特点：满足连接条件的元组保留到连接的结果中，其中存在不满足连接条件的元组会被舍弃。</li></ul><!-- /wp:list --><p><img src="https://cdn.jsdelivr.net/gh/ldh0-0/picgodemo/img/20211219130657.png"></p><!-- wp:list --><ul><li><strong>表X和Y内连接结果</strong></li></ul><!-- /wp:list --><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> a,  X.b,  Y.b,  c </span><br><span class="line"><span class="keyword">FROM</span>  X  <span class="keyword">JOIN</span>  Y  <span class="keyword">ON</span>  X.b<span class="operator">=</span>Y.b</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/ldh0-0/picgodemo/img/20211219130709.png"></p><!-- wp:heading {"level":3} --><h3 id="表外连接"><a href="#表外连接" class="headerlink" title="表外连接"></a>表外连接</h3><!-- /wp:heading --><!-- wp:list {"fontSize":"medium"} --><ul class="has-medium-font-size"><li>和内连接相对的就是<strong>外连接</strong>。</li><li>外连接的特点：满足连接条件的元组保留到连接的结果中，其中不满足连接条件的元组也会显示到连接结果中。</li></ul><!-- /wp:list --><!-- wp:heading {"level":3} --><h3 id="左外连接"><a href="#左外连接" class="headerlink" title="左外连接"></a>左外连接</h3><!-- /wp:heading --><!-- wp:list {"fontSize":"medium"} --><ul class="has-medium-font-size"><li>&nbsp;left join 或 left outer join</li><li>左外连接包含left join左表所有行，如果左表中某行在右表没有匹配，则结果中对应行右表的部分全部为空(NULL).</li><li>不能说结果的行数等于左表数据的行数。当然此处查询结果的行数等于左表数据的行数，因为左右两表此时为一对一关系。</li></ul><!-- /wp:list --><!-- wp:paragraph {"fontSize":"medium"} --><p class="has-medium-font-size">SQL语句：select * from book left join borrow on borrow.book_ID=book.book_ID where Classify='计算机类'<br>执行结果：</p><!-- /wp:paragraph --><p><img src="https://cdn.jsdelivr.net/gh/ldh0-0/picgodemo/img/20211219130743.png"></p><!-- wp:heading {"level":3} --><h3 id="右外连接"><a href="#右外连接" class="headerlink" title="右外连接"></a>右外连接</h3><!-- /wp:heading --><!-- wp:list {"fontSize":"medium"} --><ul class="has-medium-font-size"><li>right join 或 right outer join</li><li>右外连接包含right join右表所有行，如果左表中某行在右表没有匹配，则结果中对应左表的部分全部为空(NULL)。</li></ul><!-- /wp:list --><!-- wp:paragraph {"fontSize":"medium"} --><p class="has-medium-font-size">SQL语句：select * from borrow right join book on borrow.book_ID=book.book_ID where Classify='计算机类'<br>执行结果：</p><!-- /wp:paragraph --><p><img src="https://cdn.jsdelivr.net/gh/ldh0-0/picgodemo/img/20211219130814.png"></p><!-- wp:heading {"level":3} --><h3 id="全外连接"><a href="#全外连接" class="headerlink" title="全外连接"></a>全外连接</h3><!-- /wp:heading --><!-- wp:list {"fontSize":"medium"} --><ul class="has-medium-font-size"><li>&nbsp;full join 或 full outer join</li><li>完全外连接包含full join左右两表中所有的行，如果右表中某行在左表中没有匹配，则结果中对应行右表的部分全部为空(NULL)，如果左表中某行在右表中没有匹配，则结果中对应行左表的部分全部为空(NULL)。</li></ul><!-- /wp:list --><!-- wp:paragraph {"fontSize":"medium"} --><p class="has-medium-font-size">SQL语句：select * from Student full join Reader on Student.sname=reader.Reader_ID where ssex='男' or sex='男'<br>执行结果：</p><!-- /wp:paragraph --><p><img src="https://cdn.jsdelivr.net/gh/ldh0-0/picgodemo/img/20211219130854.png"></p><!-- wp:heading {"level":3} --><h3 id="复杂查询"><a href="#复杂查询" class="headerlink" title="复杂查询"></a>复杂查询</h3><!-- /wp:heading --><!-- wp:list {"fontSize":"medium"} --><ul class="has-medium-font-size"><li>使用UNION语句可以合并两个或多个查询的结果。 </li><li>UNION语句用第二个查询结果合并第一个查询结果。</li><li>它不显示两个查询中的重复的行。 </li><li>如果想显示所有行（包括重复行）则可以在UNION后面添加ALL谓词。</li></ul><!-- /wp:list --><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> Book  </span><br><span class="line"><span class="keyword">WHERE</span> publish<span class="operator">=</span>’清华大学出版社’</span><br><span class="line"><span class="keyword">UNION</span>  <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> Book  <span class="keyword">WHERE</span> price<span class="operator">&lt;</span><span class="number">25</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/ldh0-0/picgodemo/img/20211219130908.png"></p><!-- wp:heading --><h2 id="数据操纵"><a href="#数据操纵" class="headerlink" title="数据操纵"></a>数据操纵</h2><!-- /wp:heading --><!-- wp:heading {"level":3} --><h3 id="插入数据"><a href="#插入数据" class="headerlink" title="插入数据"></a>插入数据</h3><!-- /wp:heading --><!-- wp:list {"fontSize":"medium"} --><ul class="has-medium-font-size"><li>INSRET语句的基本语法：</li><li>INSERT INTO 表名 （列名列表） VALUES(值列表)</li><li>注意：列名列表 与 值列表 永远保持一致！</li></ul><!-- /wp:list --><!-- wp:heading {"level":3} --><h3 id="修改数据"><a href="#修改数据" class="headerlink" title="修改数据"></a>修改数据</h3><!-- /wp:heading --><!-- wp:list {"fontSize":"medium"} --><ul class="has-medium-font-size"><li>UPDATE 表名 SET 列名=值/表达式 [where 条件]</li></ul><!-- /wp:list --><!-- wp:heading {"level":3} --><h3 id="删除数据"><a href="#删除数据" class="headerlink" title="删除数据"></a>删除数据</h3><!-- /wp:heading --><!-- wp:list {"fontSize":"medium"} --><ul class="has-medium-font-size"><li>DELETE FROM 表名 [where 删除条件]</li></ul><!-- /wp:list --><!-- wp:heading {"level":3} --><h3 id="格式应用-1"><a href="#格式应用-1" class="headerlink" title="格式应用"></a>格式应用</h3><!-- /wp:heading --><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--插入数据</span></span><br><span class="line"><span class="comment">--把数据“(&#x27;021B310001&#x27;,&#x27;张冬&#x27;,&#x27;男&#x27;,&#x27;1976-11-26&#x27;)”插入到Reader表中</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> reader(Reader_ID,name,sex,birthdate)</span><br><span class="line"><span class="keyword">values</span> (<span class="string">&#x27;021B310001&#x27;</span>,<span class="string">&#x27;张东&#x27;</span>,<span class="string">&#x27;男&#x27;</span>,<span class="string">&#x27;1976-11-26&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">--如果插入的数据和表的列以及顺序一致，可以省略列名</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> reader</span><br><span class="line"><span class="keyword">values</span> (<span class="string">&#x27;021B310001&#x27;</span>,<span class="string">&#x27;张东&#x27;</span>,<span class="string">&#x27;男&#x27;</span>,<span class="string">&#x27;1976-11-26&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> reader(Reader_ID,name,sex)</span><br><span class="line"><span class="keyword">values</span> (<span class="string">&#x27;021B310002&#x27;</span>,<span class="string">&#x27;牟晓光&#x27;</span>,<span class="string">&#x27;女&#x27;</span>)</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> reader</span><br><span class="line"><span class="keyword">values</span> (<span class="string">&#x27;021B310002&#x27;</span>,<span class="string">&#x27;牟晓光&#x27;</span>,<span class="string">&#x27;女&#x27;</span>,<span class="keyword">NULL</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> 清华大学出版图书表 (</span><br><span class="line">book_ID   <span class="type">CHAR</span>(<span class="number">10</span>)          <span class="keyword">PRIMARY</span> KEY,</span><br><span class="line">name      NVARCHAR(<span class="number">30</span>),</span><br><span class="line">author     NVARCHAR(<span class="number">10</span>),</span><br><span class="line">publish     NVARCHAR(<span class="number">20</span>),</span><br><span class="line">price       <span class="type">DECIMAL</span>(<span class="number">6</span>,<span class="number">2</span>)</span><br><span class="line">)</span><br><span class="line"><span class="comment">--插入多条记录时子查询的列要与插入的表的列一致</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> 清华大学出版图书表</span><br><span class="line"><span class="keyword">SELECT</span> book_ID,name,author,publish,price <span class="keyword">FROM</span> Book <span class="keyword">WHERE</span> publish<span class="operator">=</span><span class="string">&#x27;清华大学出版社&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--所有图书的价格打8折</span></span><br><span class="line">update book <span class="keyword">set</span> price <span class="operator">=</span> price<span class="operator">*</span><span class="number">0.8</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--修改数据</span></span><br><span class="line"><span class="comment">--子查询方式：</span></span><br><span class="line">update borrow <span class="keyword">set</span> Borrowdate<span class="operator">=</span><span class="string">&#x27;2005-5-1&#x27;</span></span><br><span class="line"><span class="keyword">where</span> Reader_ID <span class="keyword">in</span></span><br><span class="line">(<span class="keyword">select</span> Reader_ID <span class="keyword">from</span> reader <span class="keyword">where</span></span><br><span class="line">name<span class="operator">=</span><span class="string">&#x27;王旭&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">--多表连接方式：</span></span><br><span class="line">update borrow <span class="keyword">set</span> borrowdate<span class="operator">=</span><span class="string">&#x27;2005-5-1&#x27;</span></span><br><span class="line"><span class="keyword">from</span> borrow <span class="keyword">join</span> reader <span class="keyword">on</span> </span><br><span class="line">borrow.Reader_ID <span class="operator">=</span> reader.Reader_ID <span class="keyword">where</span></span><br><span class="line">name<span class="operator">=</span><span class="string">&#x27;王旭&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--更改‘胡晓丽’借阅‘高等数学’的借阅借阅日期为‘2005-6-8’</span></span><br><span class="line">update borrow <span class="keyword">set</span> borrowdate<span class="operator">=</span><span class="string">&#x27;2005-6-8&#x27;</span></span><br><span class="line"><span class="keyword">where</span> Reader_ID <span class="keyword">in</span>(</span><br><span class="line"><span class="keyword">select</span> Reader_ID <span class="keyword">from</span> reader <span class="keyword">where</span> name<span class="operator">=</span><span class="string">&#x27;胡晓丽&#x27;</span>) <span class="keyword">and</span> book_ID <span class="keyword">in</span>(</span><br><span class="line"><span class="keyword">select</span> book_ID <span class="keyword">from</span> book <span class="keyword">where</span> name<span class="operator">=</span><span class="string">&#x27;高等数学&#x27;</span>)</span><br><span class="line"></span><br><span class="line">update borrow <span class="keyword">set</span> borrowdate <span class="operator">=</span><span class="string">&#x27;2005-6-8&#x27;</span></span><br><span class="line"><span class="keyword">from</span> borrow <span class="keyword">join</span> reader <span class="keyword">on</span> borrow.Reader_ID<span class="operator">=</span>Reader.Reader_ID</span><br><span class="line"><span class="keyword">join</span> book <span class="keyword">on</span> book.author <span class="operator">=</span> borrow.book_ID <span class="keyword">where</span></span><br><span class="line">reader.name<span class="operator">=</span><span class="string">&#x27;胡晓丽&#x27;</span> <span class="keyword">and</span> book.name<span class="operator">=</span><span class="string">&#x27;高等数学&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--删除数据</span></span><br><span class="line"><span class="comment">--子查询方式实现</span></span><br><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> borrow <span class="keyword">where</span> Borrowdate<span class="operator">=</span><span class="string">&#x27;2005-6-7&#x27;</span></span><br><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> borrow <span class="keyword">where</span> Reader_ID<span class="operator">=</span>(</span><br><span class="line"><span class="keyword">select</span> Reader_ID <span class="keyword">from</span> reader <span class="keyword">where</span> name<span class="operator">=</span><span class="string">&#x27;王旭&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">--多表连接的方式实现</span></span><br><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> borrow <span class="keyword">from</span> borrow <span class="keyword">join</span> reader <span class="keyword">on</span>  borrow.Reader_ID<span class="operator">=</span>reader.Reader_ID <span class="keyword">where</span></span><br><span class="line">reader.Reader_ID<span class="operator">=</span><span class="string">&#x27;王旭&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--删除‘C语言’的借阅记录</span></span><br><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> borrow <span class="keyword">where</span> book_ID<span class="operator">=</span>(</span><br><span class="line"><span class="keyword">select</span> book_ID <span class="keyword">from</span> book <span class="keyword">where</span> name<span class="operator">=</span><span class="string">&#x27;C语言&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">--删除‘胡晓丽’借阅‘高等数学’的借阅记录</span></span><br><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> borrow <span class="keyword">where</span> Reader_ID<span class="operator">=</span>(</span><br><span class="line"><span class="keyword">select</span> Reader_ID <span class="keyword">from</span> reader <span class="keyword">where</span> name<span class="operator">=</span><span class="string">&#x27;胡晓丽&#x27;</span>)<span class="keyword">and</span> book_ID<span class="operator">=</span>(</span><br><span class="line"><span class="keyword">select</span> book_ID <span class="keyword">from</span> book <span class="keyword">where</span> name<span class="operator">=</span><span class="string">&#x27;高等数学&#x27;</span>)</span><br></pre></td></tr></table></figure><!-- wp:heading --><h2 id="视图与索引"><a href="#视图与索引" class="headerlink" title="视图与索引"></a>视图与索引</h2><!-- /wp:heading --><!-- wp:heading {"level":3} --><h3 id="定义视图"><a href="#定义视图" class="headerlink" title="定义视图"></a>定义视图</h3><!-- /wp:heading --><!-- wp:list {"fontSize":"medium"} --><ul class="has-medium-font-size"><li>用CREATE TABLE语句创建的表叫基本表。</li><li>视图是从一个或多个基本表或视图中导出的表，视图的结构和数据都是建立在对基本表的查询基础上的。</li><li>视图不是真实存在的表，而是一个虚拟表，数据库中只存储视图的定义，而没有储存视图对应的数据，视图中的数据是从基本表中选取出来的，这些数据并不实际的按视图结构存储在数据库中，而是储在原来的基本表中。</li></ul><!-- /wp:list --><!-- wp:heading {"level":3} --><h3 id="创建视图"><a href="#创建视图" class="headerlink" title="创建视图"></a>创建视图</h3><!-- /wp:heading --><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">VIEW</span> <span class="operator">&lt;</span>视图名<span class="operator">&gt;</span> [(视图列名表)]</span><br><span class="line"><span class="keyword">AS</span></span><br><span class="line">  <span class="keyword">SELECT</span> 查询子句</span><br><span class="line">[<span class="keyword">WITH</span> <span class="keyword">CHECK</span> OPTION]</span><br></pre></td></tr></table></figure><!-- wp:heading {"level":3} --><h3 id="创建视图注意事项"><a href="#创建视图注意事项" class="headerlink" title="创建视图注意事项"></a>创建视图注意事项</h3><!-- /wp:heading --><!-- wp:list {"ordered":true,"textColor":"black","fontSize":"medium"} --><ol class="has-black-color has-text-color has-medium-font-size"><li>视图名必须遵循标识符命名规则，且对每类用户视图名必须是唯一的，即对不同用户定义相同的视图，也必须使用不同的名字。</li><li>SELECT查询子句的查询内容就是视图的内容。SELECT语句通常不允许含有ORDER BY子句和DISTINCT子句。</li><li><span class="has-inline-color has-black-color">SELECT语句中查询的表和视图即新创建的视图所参照的表和视图</span>。</li><li>视图列名列表是视图中所包含的列。若使用与基本表中相同的列名，则可以省略。若指定列名列表，则需全部指定，不能只给出一部分。以下情况要求必须指定视图的全部列名：①由算术表达式、系统内置函数或者常量得到的列；②多表连接查询时选出的同名列；③希望视图中的列名与基表中的列名不同的时候。</li><li>WITH CHECK OPTION子句表示在视图上执行UPDATE，INSERT或DELETE操作时要保证所修改的行满足视图定义中的谓词条件（即SELECT查询子句中的限定条件，如Where条件），这样可以确保数据修改后，仍可通过视图看到修改的数据。</li></ol><!-- /wp:list --><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">VIEW</span> ReaderInfo(ID,Name,Age)</span><br><span class="line"><span class="keyword">AS</span></span><br><span class="line"><span class="keyword">SELECT</span> reader_id,name,<span class="keyword">YEAR</span>(GETDATE())<span class="operator">-</span></span><br><span class="line"><span class="keyword">YEAR</span>(birthdate)</span><br><span class="line"><span class="keyword">FROM</span> Reader</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">VIEW</span> PerPublish_AVG(Publish,</span><br><span class="line">AVG_Price)</span><br><span class="line"><span class="keyword">AS</span></span><br><span class="line"><span class="keyword">SELECT</span> publish,<span class="built_in">AVG</span>(price)</span><br><span class="line"><span class="keyword">FROM</span> Book</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> publish</span><br><span class="line"><span class="comment">--创建计算机系的所有学生信息视图ComputerStu，并要求对该视图的修改满足计算机系这个条件。</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">VIEW</span> ComputerStu</span><br><span class="line"><span class="keyword">AS</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> Student</span><br><span class="line"><span class="keyword">WHERE</span> sdept<span class="operator">=</span><span class="string">&#x27;计算机系&#x27;</span></span><br><span class="line"><span class="keyword">with</span> <span class="keyword">check</span> option</span><br><span class="line"></span><br><span class="line"><span class="comment">--创建计算机系学生选修课程情况的视图ComputerSC，要求显示所有学生的学号、姓名、选修的课程号、课程名以及成绩。</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">VIEW</span> ComputerSC (学号,姓名,课程号,课程名,成绩)</span><br><span class="line"><span class="keyword">AS</span></span><br><span class="line"><span class="keyword">SELECT</span> student.sno,student.sname,SC.con,course.cname,Sc.grade</span><br><span class="line"><span class="keyword">FROM</span> student <span class="keyword">join</span> Sc <span class="keyword">on</span> student.sno<span class="operator">=</span>Sc.sno <span class="keyword">join</span> Course <span class="keyword">on</span> Course.cno<span class="operator">=</span>SC.con</span><br><span class="line"><span class="keyword">where</span> sdept<span class="operator">=</span><span class="string">&#x27;计算机系&#x27;</span></span><br><span class="line"><span class="keyword">with</span> <span class="keyword">check</span> option</span><br><span class="line"></span><br><span class="line"><span class="comment">--基于computerSC视图，创建计算机系刘晨选修课程的视图LCView，显示其选修课程号、课程名和成绩。</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">VIEW</span> LCView</span><br><span class="line"><span class="keyword">AS</span></span><br><span class="line"><span class="keyword">SELECT</span> 课程号,课程名,成绩 <span class="keyword">FROM</span> ComputerSC</span><br><span class="line"></span><br><span class="line"><span class="comment">--创建每个系学生人数的视图DeptCount，显示系名和人数。</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">VIEW</span> DeptCount(系名,人数)</span><br><span class="line"><span class="keyword">AS</span> </span><br><span class="line"><span class="keyword">SELECT</span> sdept,<span class="built_in">count</span>(sdept) <span class="keyword">FROM</span> Student </span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">by</span> sdept</span><br><span class="line"></span><br><span class="line"><span class="comment">--创建平均成绩高于60的学生学生视图PassedStu，显示学生的学号、姓名和平均成绩。</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">VIEW</span> PassedStu(学号,名字,平均成绩)</span><br><span class="line"><span class="keyword">AS</span></span><br><span class="line"><span class="keyword">SELECT</span> Student.sno,sname,<span class="built_in">AVG</span>(grade) <span class="keyword">from</span> Student</span><br><span class="line"><span class="keyword">join</span> SC <span class="keyword">on</span> Student.sno<span class="operator">=</span>Sc.sno <span class="keyword">group</span> <span class="keyword">by</span> Student.sno,sname <span class="keyword">having</span> <span class="built_in">AVG</span>(grade) <span class="operator">&gt;</span> <span class="number">60</span> </span><br><span class="line"><span class="keyword">with</span> <span class="keyword">check</span> option</span><br></pre></td></tr></table></figure><!-- wp:heading {"level":3} --><h3 id="修改视图"><a href="#修改视图" class="headerlink" title="修改视图"></a>修改视图</h3><!-- /wp:heading --><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--ALTER VIEW 视图名[(列名[,…n])]</span></span><br><span class="line"><span class="comment">--       AS SELECT查询语句</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--修改视图BookView1, 其中包含书价高于40元的图书信息。 </span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">VIEW</span>  BookView1(ID,Name,Author,Publish,Price)</span><br><span class="line"><span class="keyword">AS</span></span><br><span class="line">     <span class="keyword">SELECT</span>  book_id,name,author,publish,price</span><br><span class="line">     <span class="keyword">FROM</span>  Book </span><br><span class="line">     <span class="keyword">WHERE</span> price<span class="operator">&gt;</span><span class="number">40</span></span><br></pre></td></tr></table></figure><!-- wp:heading {"level":3} --><h3 id="删除视图"><a href="#删除视图" class="headerlink" title="删除视图"></a>删除视图</h3><!-- /wp:heading --><!-- wp:list {"fontSize":"medium"} --><ul class="has-medium-font-size"><li>格式：DROP VIEW <视图名></li><li>删除视图时注意：按照参照的逆序删除。如WXBorrow视图是基于R_B_Borrow创建的，因此删除的顺序应该是WXBorrow、R_B_Borrow</li></ul><!-- /wp:list --><!-- wp:heading {"level":3} --><h3 id="索引的概念"><a href="#索引的概念" class="headerlink" title="索引的概念"></a>索引的概念</h3><!-- /wp:heading --><!-- wp:list {"fontSize":"medium"} --><ul class="has-medium-font-size"><li>索引是一种特殊的查询表，可以被数据库搜索引擎用来加速数据的检索。简单说来，索引就是指向表中数据的指针。数据库的索引同书籍后面的索引非常相像。</li><li>例如，如果想要查阅一本书中与某个特定主题相关的所有页面，你会先去查询索引（索引按照字母表顺序列出了所有主题），然后从索引中找到一页或者多页与该主题相关的页面。</li><li>索引能够提高 SELECT 查询和 WHERE 子句的速度，但是却降低了包含 UPDATE 语句或 INSERT 语句的数据输入过程的速度。索引的创建与删除不会对表中的数据产生影响。</li><li>创建索引需要使用 CREATE INDEX 语句，该语句允许对索引命名，指定要创建索引的表以及对哪些列进行索引，还可以指定索引按照升序或者降序排列。</li><li>同 UNIQUE 约束一样，索引可以是唯一的。这种情况下，索引会阻止列中（或者列的组合，其中某些列有索引）出现重复的条目。</li><li>创建索引语法格式：</li></ul><!-- /wp:list --><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> [<span class="keyword">UNIQUE</span>] [CLUSTERED] INDEX 索引名</span><br><span class="line"><span class="keyword">ON</span> 表名<span class="operator">|</span>视图名 (列名 [<span class="keyword">ASC</span><span class="operator">|</span><span class="keyword">DESC</span>]  [,…n])</span><br><span class="line">其中：</span><br><span class="line">①<span class="keyword">UNIQUE</span>：创建的索引是唯一索引。</span><br><span class="line">②CLUSTERED：指明创建的索引为聚集索引。</span><br><span class="line">③索引名：指定所创建的索引的名称。</span><br><span class="line">④表名<span class="operator">|</span>视图名：指定在哪张表或哪个视图上创建索引。</span><br><span class="line">⑤列名：指定被索引的列。</span><br><span class="line">⑥<span class="keyword">ASC</span><span class="operator">|</span><span class="keyword">DESC</span>：指定特定索引列的排序方式。默认值是升序<span class="keyword">ASC</span>。 </span><br><span class="line"><span class="operator">&lt;</span><span class="operator">/</span>code<span class="operator">&gt;</span><span class="operator">&lt;</span><span class="operator">/</span>pre<span class="operator">&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--为读者表[读者姓名]列创建索引IDX_NAME。</span></span><br><span class="line"><span class="keyword">CREATE</span> INDEX IDX_NAME <span class="keyword">ON</span> Reader (Name)</span><br><span class="line"><span class="comment">--为图书信息表中的图书编号一列创建聚集索引IDX_ID，并且强制唯一性。</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">UNIQUE</span> CLUSTERED INDEX IDX_ID <span class="keyword">ON</span> Book(book_id)</span><br><span class="line"><span class="comment">--在图书表上创建复合索引IDX_Unite，首先在列Publish上创建降序索引，若Publish列值相同的图书再按照Book_id列创建升序索引。</span></span><br><span class="line"><span class="keyword">CREATE</span> INDEX Unite <span class="keyword">ON</span> Book (publish <span class="keyword">DESC</span>, book_id <span class="keyword">ASC</span>)</span><br></pre></td></tr></table></figure><!-- wp:heading {"level":3} --><h3 id="索引的创建与管理"><a href="#索引的创建与管理" class="headerlink" title="索引的创建与管理"></a>索引的创建与管理</h3><!-- /wp:heading --><!-- wp:list {"fontSize":"medium"} --><ul class="has-medium-font-size"><li>在SQL Server中，可以在查询分析器中使用存储sp_helpindex检查索引创建情况。</li><li>使用SQL语句的DROP INDEX，可以从当前数据库中删除一个或多个索引，语法格式：DROP INDEX 表名.索引名|视图.索引名 [ ,...n ]</li></ul><!-- /wp:list -->]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> sql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>BUUCTF</title>
      <link href="/2021/12/12/Vulhub/"/>
      <url>/2021/12/12/Vulhub/</url>
      
        <content type="html"><![CDATA[<h2 id=""><a href="#" class="headerlink" title=""></a></h2>]]></content>
      
      
      
        <tags>
            
            <tag> wp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Misc总结</title>
      <link href="/2021/12/08/Misc%E6%80%BB%E7%BB%93/"/>
      <url>/2021/12/08/Misc%E6%80%BB%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<h2 id="图片隐写"><a href="#图片隐写" class="headerlink" title="图片隐写"></a>图片隐写</h2><h3 id="binwalk文件分离"><a href="#binwalk文件分离" class="headerlink" title="binwalk文件分离"></a>binwalk文件分离</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">binwalk [文件名] 对文件进行扫描是否有隐藏文件</span><br><span class="line">binwalk -e [文件名] 提取文件中的隐藏文件</span><br></pre></td></tr></table></figure><h3 id="图片16进制"><a href="#图片16进制" class="headerlink" title="图片16进制"></a>图片16进制</h3><p><img src="https://cdn.jsdelivr.net/gh/ldh0-0/picgodemo/img/Snipaste_2021-12-11_22-31-05.png"><br>从第二行开始0-3列是图片的宽，4-7列是图片的高</p>]]></content>
      
      
      <categories>
          
          <category> Misc </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Misc </tag>
            
            <tag> CTF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第一届 “东软杯”网络安全CTF竞赛</title>
      <link href="/2021/12/07/%E4%B8%9C%E8%BD%AFwp1/"/>
      <url>/2021/12/07/%E4%B8%9C%E8%BD%AFwp1/</url>
      
        <content type="html"><![CDATA[<blockquote><p>萌新第一次参加CTF比赛记录一下</p></blockquote><h2 id="MISC"><a href="#MISC" class="headerlink" title="MISC"></a>MISC</h2><ol><li><p>只是个PNG，别想太多了.png<br>下载后发现图片打不开，之后放到Linux中用binwalk发现还有一个文件，打开后找到flag。<br><img src="https://cdn.jsdelivr.net/gh/ldh0-0/picgodemo/img/20211208163217.png"><br><img src="https://cdn.jsdelivr.net/gh/ldh0-0/picgodemo/img/20211208164910.png"></p></li><li><p>压缩包压缩包压缩包压缩包<br>打开后是一个有密码的压缩包，发现密码就是文件名。但解压了十多个压缩包后发现不对劲，直接在网上找了个python脚本跑了一会就出来了。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> zipfile, os</span><br><span class="line"></span><br><span class="line">extPath = <span class="string">&quot;C:\\Users\\xxx&quot;</span> 压缩包所在路径</span><br><span class="line">file = <span class="string">&quot;xxx&quot;</span> <span class="comment">#压缩包名</span></span><br><span class="line">index = <span class="number">0</span></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    index += <span class="number">1</span></span><br><span class="line">    filePath = extPath + file</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;unzip&quot;</span> + <span class="built_in">str</span>(index) + <span class="string">&quot;:&quot;</span> + filePath)</span><br><span class="line">    zFile = zipfile.ZipFile(filePath, <span class="string">&quot;r&quot;</span>)</span><br><span class="line">    <span class="keyword">for</span> fileM <span class="keyword">in</span> zFile.namelist():</span><br><span class="line">        zFile.extract(fileM, extPath, pwd = fileM[:-<span class="number">4</span>].encode())</span><br><span class="line">        file = fileM</span><br><span class="line">    zFile.close();</span><br><span class="line">    os.remove(filePath)</span><br></pre></td></tr></table></figure></li></ol><p>最后一个压缩包是23333.zip密码不是文件名，简单的暴力破解后就出来密码了。<br> <img src="https://cdn.jsdelivr.net/gh/ldh0-0/picgodemo/img/20211208165448.png"></p><h2 id="CRYPTO"><a href="#CRYPTO" class="headerlink" title="CRYPTO"></a>CRYPTO</h2><ol><li>[签到]键盘侠<br>看到一串字母随便找了一个百度UYTGBNM发现一个网址瞬间醒悟。<br><a href="https://www.fwhibbit.es/wp-content/uploads/2017/02/Write-up-Sudan.pdf">网站</a><br><img src="https://cdn.jsdelivr.net/gh/ldh0-0/picgodemo/img/20211208165913.png"></li><li>[萌新]素数<br>要求10个不重复的长度&gt;=1024bits的素数，网上找到python脚本一跑就出。<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> random <span class="keyword">import</span> randint</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">miller_rabin</span>(<span class="params">p</span>):</span></span><br><span class="line">    <span class="keyword">if</span> p == <span class="number">1</span>: <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">    <span class="keyword">if</span> p == <span class="number">2</span>: <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">    <span class="keyword">if</span> p % <span class="number">2</span> == <span class="number">0</span>: <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">    m, k, = p - <span class="number">1</span>, <span class="number">0</span></span><br><span class="line">    <span class="keyword">while</span> m % <span class="number">2</span> == <span class="number">0</span>:</span><br><span class="line">        m, k = m // <span class="number">2</span>, k + <span class="number">1</span></span><br><span class="line">    a = randint(<span class="number">2</span>, p - <span class="number">1</span>)</span><br><span class="line">    x = <span class="built_in">pow</span>(a, m, p)</span><br><span class="line">    <span class="keyword">if</span> x == <span class="number">1</span> <span class="keyword">or</span> x == p - <span class="number">1</span>: <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">    <span class="keyword">while</span> k &gt; <span class="number">1</span>:</span><br><span class="line">        x = <span class="built_in">pow</span>(x, <span class="number">2</span>, p)</span><br><span class="line">        <span class="keyword">if</span> x == <span class="number">1</span>: <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">        <span class="keyword">if</span> x == p - <span class="number">1</span>: <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">        k = k - <span class="number">1</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">is_prime</span>(<span class="params">p, r=<span class="number">40</span></span>):</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(r):</span><br><span class="line">        <span class="keyword">if</span> miller_rabin(p) == <span class="literal">False</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    T = time.perf_counter()</span><br><span class="line">    <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">100</span>):</span><br><span class="line">        index = <span class="number">1024</span></span><br><span class="line">        <span class="built_in">print</span>(index, <span class="string">&quot;位质数: &quot;</span>, end=<span class="string">&quot;&quot;</span>)</span><br><span class="line">        num = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(index):</span><br><span class="line">            num = num * <span class="number">2</span> + randint(<span class="number">0</span>, <span class="number">1</span>)</span><br><span class="line">        <span class="keyword">while</span> is_prime(num) == <span class="literal">False</span>:</span><br><span class="line">            num = num + <span class="number">1</span></span><br><span class="line">        <span class="built_in">print</span>(num)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;----------------------------&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;用时：&quot;</span>, time.perf_counter() - T)</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ol><h2 id="REVERSE"><a href="#REVERSE" class="headerlink" title="REVERSE"></a>REVERSE</h2><ol><li>[签到]signin<br>直接拖进IDA后发现flag<br><img src="https://cdn.jsdelivr.net/gh/ldh0-0/picgodemo/img/20211208170122.png"></li><li>[萌新]happyCTF<br>先用die看了一下发现是32位的<br><img src="https://cdn.jsdelivr.net/gh/ldh0-0/picgodemo/img/20211208170145.png"><br>用32位IDA反汇编后看main函数按F5查看它的伪代码<br><img src="https://cdn.jsdelivr.net/gh/ldh0-0/picgodemo/img/20211208170207.png"><br>发现输入位数必须是24位的字符串，输入值就位flag.之后进去lambda_1b3a4e77a09e1a7ed440bad3aa4c443b_函数看发现flag被异或了20最后和key相等。<br><img src="https://cdn.jsdelivr.net/gh/ldh0-0/picgodemo/img/20211208170227.png"><br>所以我们用20在将key异或回去就是flag了。<br>用python跑了一下发现flag<br>这里的x是之前手动将key值对应的ascii码写出来了，其实直接在python中换就行。<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">x = <span class="string">&quot;rxusoCqxw&#123;yqK`&#123;KZqag&#123;r`i&quot;</span></span><br><span class="line">i = <span class="number">0</span></span><br><span class="line"><span class="keyword">while</span> i &lt; <span class="number">24</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="built_in">chr</span>(<span class="built_in">ord</span>(x[i]) ^ <span class="number">20</span>), end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">    i += <span class="number">1</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><img src="https://cdn.jsdelivr.net/gh/ldh0-0/picgodemo/img/20211208170312.png"><h2 id="PWN"><a href="#PWN" class="headerlink" title="PWN"></a>PWN</h2></li><li>签到NssShop<br>最后写件数的时候直接输7个1超出其（int范围*flag的价格）int范围<br>Flag就出来了<br><img src="https://cdn.jsdelivr.net/gh/ldh0-0/picgodemo/img/20211208170343.png"></li></ol>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> wp </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
